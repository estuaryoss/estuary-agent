kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: estuary-agent
  name: estuary-agent
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: estuary-agent
  template:
    metadata:
      labels:
        k8s-app: estuary-agent
    spec:
      containers:
        - name: estuary-agent
          image: dinutac/estuary-agent:latest
          command: ["bash", "-c", "sleep 30 && /scripts/main_flask.py"] #wait until eureka up
          env:
            - name: EUREKA_SERVER
              value: "http://netflixoss-eureka:8080/eureka/v2"
            - name: APP_IP_PORT
              value: "estuary-agent:8080"
          ports:
            - containerPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: estuary-agent
  name: estuary-agent
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    k8s-app: estuary-agent
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: netflixoss-eureka
  name: netflixoss-eureka
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: netflixoss-eureka
  template:
    metadata:
      labels:
        k8s-app: netflixoss-eureka
    spec:
      containers:
        - name: netflixoss-eureka
          image: dinutac/netflixoss-eureka:1.9.21
---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: netflixoss-eureka
  name: netflixoss-eureka
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    k8s-app: netflixoss-eureka
